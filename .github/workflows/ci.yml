name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
    - name: Lint
      run: pre-commit run --show-diff-on-failure --color=always --all-files
  build:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.8, 3.9, '3.10', 3.11]
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r local-requirements.txt
        pip install -e .
        python -m playwright install
        python -m playwright install-deps
    - name: Test
      if: ${{ matrix.os != 'ubuntu-latest' }}
      run: pytest --cov=pytest_playwright --cov-report xml
    - name: Test on Linux
      if: ${{ matrix.os == 'ubuntu-latest' }}
      run: xvfb-run pytest --cov=pytest_playwright --cov-report xml
  build-conda:
    name: Conda Build
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          python-version: 3.9
          channels: conda-forge
      - name: Prepare
        run: conda install conda-build conda-verify
      - name: Build
        run: conda build . -c microsoft -c conda-forge
